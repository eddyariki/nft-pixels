/// <reference types="node" />
import { Provider, SignedTransaction, Transaction, Wallet } from '../common';
/**
 * Wallet base class.
 */
export declare abstract class WalletBase implements Wallet {
    address(): string;
    signTransaction(tx: Transaction, provider: Provider): Promise<SignedTransaction>;
    /**
     * Sign a raw transaction buffer.
     *
     * @param rawTx The raw transaction.
     */
    protected abstract _sign(rawTx: Buffer | Uint8Array): Promise<string>;
    /**
     * Get the bech32 address of this wallet.
     */
    protected abstract _getAddress(): string;
    /**
     * Serialize this wallet.
     */
    abstract serialize(): string;
}
