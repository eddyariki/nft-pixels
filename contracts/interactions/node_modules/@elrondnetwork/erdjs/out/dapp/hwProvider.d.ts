import { IDappProvider, IHWElrondApp } from "./interface";
import { IProvider } from "../interface";
import { Transaction } from "../transaction";
export declare class HWProvider implements IDappProvider {
    provider: IProvider;
    hwApp?: IHWElrondApp;
    constructor(httpProvider: IProvider);
    /**
     * Creates transport and initialises ledger app.
     */
    init(): Promise<boolean>;
    /**
     * Returns true if init() was previously called succesfully
     */
    isInitialized(): boolean;
    /**
     * Mocked function, returns isInitialized as an async function
     */
    isConnected(): Promise<boolean>;
    /**
     * Mocks a login request by returning the ledger selected address
     */
    login(): Promise<string>;
    /**
     * Mocks a logout request by returning true
     */
    logout(): Promise<boolean>;
    /**
     * Fetches current selected ledger address
     */
    getAddress(): Promise<string>;
    /**
     * Signs and sends a transaction. Returns the transaction hash
     * @param transaction
     */
    sendTransaction(transaction: Transaction): Promise<Transaction>;
    private getCurrentAddress;
}
